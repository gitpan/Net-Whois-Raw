NAME
    Net::Whois::Raw - Perl extension for unparsed raw whois information

SYNOPSIS
      use Net::Whois::Raw;
  
      $s = whois('perl.com');
      $s = whois('funet.fi');
      $s = whois('yahoo.co.uk');

      $OMIT_MSG = 1; # This will attempt to strip several known copyright
                    messages and disclaimers sorted by servers.
                    Default is to give the whole response.

      $OMIT_MSG = 2; # This will try some additional stripping rules
                    if none are known for the spcific server.

      $CHECK_FAIL = 1; # This will return undef if the response matches
                    one of the known patterns for a failed search,
                    sorted by servers.
                    Default is to give the textual response.

      $CHECK_FAIL = 2; # This will match against several more rules
                    if none are known for the specific server.

      $CACHE_DIR = "/var/spool/pwhois/"; # Whois information will be
                    cached in this directory. Default is no cache.

      $CACHE_TIME = 24; # Cache files will be cleared after not accessed
                    for a specific number of hours. Documents will not be
                    cleared if they keep get requested for, independent
                    of disk space. Default is not to clear the cache.

      $USE_CNAMES = 1; # Use whois-servers.net to get the whois server
                    name when possible. Default is to use the 
                    hardcoded defaults.

      $TIMEOUT = 10; # Cancel the request if connection is not made within
                    a specific number of seconds.

      Note: as of version 0.21, extra data will be loaded only if the
      OMIT_MSG or CHECK_FAIL flags were used, in order to reduce memory usage.

DESCRIPTION
    Net::Whois::Raw queries NetworkSolutions and follows the Registrar:
    answer for ORG, EDU, COM and NET domains. For other TLDs it uses the
    whois-servers.net namespace. ($TLD.whois-servers.net).

    Setting the variables $OMIT_MSG and $CHECK_FAIL will match the results
    against a set of known patterns. The first flag will try to omit the
    copyright message/disclaimer, the second will attempt to determine if
    the search failed and return undef in such a case.

    IMPORTANT: these checks merely use pattern matching; they will work on
    several servers but certainly not on all of them.

    (This features were contributed by Walery Studennikov despair@sama.ru)

AUTHOR
    Ariel Brosh, schop@cpan.org, Inspired by jwhois.pl available on the net.

CREDITS
    Fixed regular expression to match hyphens. (Peter Chow,
    peter@interq.or.jp)

    Added support for Tonga TLD. (.to) (Peter Chow, peter@interq.or.jp)

    Added support for reverse lookup of IP addresses via the ARIN registry.
    (Alex Withers awithers@gonzaga.edu)

    This will work now for RIPE addresses as well, according to a
    redirection from ARIN. (Philip Hands phil@uk.alcove.com, Trevor Peirce
    trev@digitalcon.ca)

    Added the pattern matching switches, (Walery Studennikov
    despair@sama.ru)

    Modified pattern matching, added cache. (Tony L. Svanstrom
    tony@svanstrom.org)

CLARIFICATION
    As NetworkSolutions got most of the domains of InterNic as legacy, we
    start by querying their server, as this way one whois query would be
    sufficient for many domains. Starting at whois.internic.net or
    whois.crsnic.net will result in always two requests in any case.

NOTE
    Some users complained that the die statements in the module make their
    CGI scripts crash. Please consult the entries on eval and die on the
    perlfunc manpage about exception handling in Perl.

COPYRIGHT
    Copyright 2000-2002 Ariel Brosh.

    This package is free software. You may redistribute it or modify it
    under the same terms as Perl itself.

    I apologize for any misunderstandings caused by the lack of a clear
    licence in previous versions.

COMMERCIAL SUPPORT
    Not available anymore.

LEGAL
    Notice that registrars forbid querying their whois servers as a part of
    a search engine, or querying for a lot of domains by script. Also,
    omitting the copyright information (that was requested by users of this
    module) is forbidden by the registrars.

SEE ALSO
    the perl(1) manpage, the Net::Whois manpage, the whois manpage.

